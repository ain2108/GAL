int dfs(nlist graph,string A)
{
	
	int found;

	slist visited;
	slist stack;

	elist v;
	int s_counter;
	string temp_str;
	string node_name;
	int node_found;

	nlist temp;
	temp = graph;
	int graph_length;
	graph_length = nlength(graph);
	int i;
	i = 0;

	while(1==1)
	{
		if(i >= graph_length)
		{
			return found;
		}
		else
		{

		}

		v = npeek(temp);
		temp = nnext(temp);

		print_elist(v);
		/*
		s_counter = 0;
		while(s_counter < slength(visited))
		{
			temp_str = speek(visited);
			node_name = source(v);

			node_found = streq(temp_str,node_name);

			if(node_found == 0)
			{

			}
			else
			{

			}

			s_counter = s_counter + 1;
		}*/
		i = i+1;
	}


	return found;

}

int main()
{
	slist visited_set;

	/* Declare our nodes above */ 
	node n1;
    n1 = |"A": 2, "B", 4, "C"|; 
    node n2;
    n2 = |"B": 11, "E", 12, "F"|;
    node n3; 
    n3 = |"C": 5, "G", 16, "H"|; 

	nlist new_graph;
    new_graph = [n1::n2::n3]; 

    dfs(new_graph,"E");

}