/*
 * authors: Lobo, Chan, Nefedenkov
 * List implementation in gal
 */

box List:
    edge * first;
:> // Improvising with the symbol to show end of block

// Both yet to be implemented
List * initList(); 
void destrList(List * list);

Edge * add_front(List * list, void * elmt);
void traverse_map(function * f(void * param), List * list);
void print_string(void * string);
void reverseList(List * list);



// Adds an element to the front of the list
Edge * add_front(List * list, void * elmt):

     edge container = (NULL, elmt, NULL);

     // Conditional
     if list->first == NULL:
     	list->first = &container; // '&' to get adress
	return;
     :>

     list->first->src = &container;
     container->dst = list->first;
     list->first = &container;

     return list->first;
   
:>
